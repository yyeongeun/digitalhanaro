-- 주석 ctrl +/
-- 실습에 사용할 테이블 구조 보기
DESC EMP;
-- 부서 테이블
DESC DEPT;
-- 급여등급 테이블
DESC SALGRADE;
--
-- SQL 기본
-- SELECT 열 FROM 테이블명
SELECT * FROM EMP;
-- 사원 이름 보기
-- 한 개의 열만 보기 = 프로젝션
SELECT ENAME FROM EMP;
-- 사원 이름 & 직책 보기 : 쉼표로 여러 열 나열
SELECT ENAME, JOB FROM EMP;
-- 부서 테이블 전체 보기

-- 행 4 * 열 3
SELECT * FROM DEPT;
-- 부서 이름 보기 = 프로젝션
SELECT DNAME FROM DEPT;
-- 부서 이름 & 부서 위치 보기
SELECT DNAME, LOC FROM DEPT;
-- 중복 제거 DISTINCT
SELECT DEPTNO FROM EMP;
SELECT DISTINCT DEPTNO FROM EMP;
SELECT DISTINCT JOB,DEPTNO FROM EMP;
-- 별칭 설정
SELECT ENAME, SAL, SAL*12+COMM FROM EMP;
SELECT ENAME, SAL, SAL*12+COMM AS ANNSAL FROM EMP; -- 별칭 설정하여 공개하기 싫은 계산식 숨길 수 있음
SELECT ENAME, SAL, SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+COMM FROM EMP; -- 나오는 열 이름이 너무 길어서 별칭을 설정하면 짧게 나오게 할 수 있음
SELECT ENAME, SAL, SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+SAL+COMM AS ANNSAL FROM EMP;
-- 정렬하기
-- 오름차순 ASC (생략가능=디폴트)
-- 급여가 낮은 값에서 높은 값으로 정렬
SELECT * FROM EMP ORDER BY SAL ASC;
SELECT * FROM EMP ORDER BY SAL;
-- 내림차순 DESC
-- 급여가 높은 값에서 낮은 값으로 정렬
SELECT * FROM EMP ORDER BY SAL DESC;
-- 두개 이상의 열로 정렬
SELECT * FROM EMP ORDER BY DEPTNO ASC, SAL DESC;
-- where 절 조건
SELECT * FROM EMP;
-- 30번 부서에 일하는 직원 = 6명
SELECT * FROM EMP WHERE DEPTNO = 30;
-- 사원번호 7782 인 사원
SELECT * FROM EMP WHERE EMPNO = 7782;
-- AND 교집합
SELECT * FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';
SELECT * FROM EMP WHERE DEPTNO = 30 AND EMPNO = 7499;
-- OR 합집합
SELECT * FROM EMP WHERE DEPTNO = 30 OR JOB = 'SALESMAN';
SELECT * FROM EMP WHERE DEPTNO = 20 OR JOB = 'SALESMAN';
-- 산술 연산자 = 사칙연산
SELECT * FROM EMP WHERE SAL*12 = 36000;
-- 비교 연산자
SELECT * FROM EMP WHERE SAL >= 3000;
SELECT * FROM EMP WHERE SAL >= 3000 AND JOB = 'ANALYST';
SELECT * FROM EMP WHERE SAL >= 2000 AND JOB = 'ANALYST';
-- 등가 연산자
SELECT * FROM EMP WHERE SAL != 3000;
SELECT * FROM EMP WHERE SAL = 3000;
-- NOT 논리정연산자
SELECT * FROM EMP WHERE NOT SAL = 3000;
-- IN 연산자 = OR 조건 여러개
SELECT * FROM EMP WHERE JOB IN ('MANAGER','SALESMAN','CLERK');
SELECT * FROM EMP WHERE JOB = 'MANAGER' OR JOB = 'SALESMAN' OR JOB = 'CLERK';
-- NOT IN 연산자
SELECT * FROM EMP WHERE JOB NOT IN ('MANAGER','SALESMAN','CLERK');
SELECT * FROM EMP WHERE JOB != 'MANAGER' AND JOB != 'SALESMAN' AND JOB != 'CLERK';
-- 10번, 20번 부서에서 근무하는 직원 =>  IN
SELECT * FROM EMP WHERE DEPTNO IN (10,20);
-- 10번 부서에서 근무하는 직운 => NOT IN
SELECT * FROM EMP WHERE DEPTNO NOT IN 10;
-- BETWEEN A AND B = A보다 크거나 같고, B보다 작거나 같다
SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;
SELECT * FROM EMP WHERE SAL >= 2000 AND SAL <= 3000;
-- NOT BETWEEN A AND B = A보다 작거나, B보다 크다
SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;
SELECT * FROM EMP WHERE SAL < 2000 OR SAL > 3000;
-- LIKE 연산자 & 와일드카드
-- S로 시작하는 이름을 가진 모든 사원
SELECT * FROM EMP WHERE ENAME LIKE 'S%';
-- 두번째 글자가 L인 이름을 가진 모든 사원
SELECT * FROM EMP WHERE ENAME LIKE '_L%';
-- 이름에 S가 있는 이름을 가진 모든 사원
SELECT * FROM EMP WHERE ENAME LIKE '%S%';
-- 이름에 AM이 있는 모든 사원
SELECT * FROM EMP WHERE ENAME LIKE '%AM%';
-- IS NULL 연산자
SELECT ENAME,SAL,SAL*12+COMM AS ANNSAL, COMM FROM EMP;
SELECT * FROM EMP WHERE COMM = NULL;  -- 널값 찾을 수 없음
SELECT * FROM EMP WHERE COMM IS NULL; -- 널값 찾을 수 있음
SELECT * FROM EMP WHERE COMM IS NOT NULL;
-- 직속상관이 있는 사람과 없는 사람
SELECT * FROM EMP WHERE MGR IS NOT NULL;
SELECT * FROM EMP WHERE MGR IS NULL;
-- NULL을 이용한 AND / OR 연산
-- AND 조건은 둘 다 참이어야 하는, 이 경우 앞의 조건이 무조건 NULL 이므로 성립이 안됨
SELECT * FROM EMP WHERE SAL > NULL AND COMM IS NULL;
-- OR 조건은 둘 중의 하나만 참이어도 성립, 이 경우 뒤의 조건이 참인 경우가 있음 = 수당이 널값인 사람
SELECT * FROM EMP WHERE SAL > NULL OR COMM IS NULL;
SELECT * FROM EMP WHERE COMM IS NULL;
-- 집합 연산자 UNION
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 20;
-- 중복 제거 확인
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;
-- UNION ALL 중복 제거 없이 합집합
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;
-- 합집합 사용할 때 주의할 점 확인
-- 1) 두 번째 테이블의 DEPTNO 빼고 합치기 => 열의 개수 맞아야 함
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL FROM EMP WHERE DEPTNO = 20;
-- 2) 열의 순서를 바꿔서 합치기 + 데이터 타입이 다르게 => 서로 데이터 타입이 같아야 함
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT ENAME, EMPNO, SAL FROM EMP WHERE DEPTNO = 20;
-- 3)열의 순서를 바꿔서 합치기 + 데이터 타입이 같게 => 잘못 합쳐진 것이니 열의 순서를 똑같이 맞춰야 함
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT SAL, ENAME, DEPTNO, EMPNO FROM EMP WHERE DEPTNO = 20;
-- MINUS 차집합
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
MINU
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;
-- INTERSECT 교집합
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
INTERSECT
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;

